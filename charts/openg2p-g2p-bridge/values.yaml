global:
  g2pBridgeHostname: g2p-bridge.sandbox.openg2p.net

openg2p-g2p-bridge-api:
  enabled: true
  image:
    tag: '1.0.2'
  common:
    enabled: false
  postgresql:
    enabled: false
  envVars:
    G2P_BRIDGE_DB_HOSTNAME: '{{ .Release.Name }}-postgresql'
  envVarsFrom:
    G2P_BRIDGE_DB_PASSWORD:
      secretKeyRef:
        name: '{{ .Release.Name }}-postgresql'
        key: password

openg2p-g2p-bridge-celery-beat-producers:
  enabled: true
  image:
    repository: openg2p/openg2p-g2p-bridge-celery-beat-producers
    tag: '1.0.2'
  common:
    enabled: false
  postgresql:
    enabled: false
  redis:
    enabled: false
  envVars:
    G2P_BRIDGE_CELERY_BEAT_MAPPER_RESOLVE_API_URL: 'http://spar-spar-mapper-api/sync/resolve'
    G2P_BRIDGE_CELERY_BEAT_DB_HOSTNAME: '{{ .Release.Name }}-postgresql'
    G2P_BRIDGE_CELERY_BEAT_CELERY_BROKER_URL: redis://{{ .Release.Name }}-redis-master:6379/0
    G2P_BRIDGE_CELERY_BEAT_CELERY_BACKEND_URL: redis://{{ .Release.Name }}-redis-master:6379/0
    G2P_BRIDGE_CELERY_BEAT_BANK_FA_DECONSTRUCT_STRATEGY: ^account_number:(?P<account_number>.*)\.branch_code:(?P<branch_code>.*)\.bank_code:(?P<bank_code>.*)\.mobile_number:(?P<mobile_number>.*)\.email_address:(?P<email_address>.*)\.fa_type:(?P<fa_type>.*)$
    G2P_BRIDGE_CELERY_BEAT_MOBILE_WALLET_DECONSTRUCT_STRATEGY: ^mobile_number:(?P<mobile_number>.*)\.wallet_provider_name:(?P<wallet_provider_name>.*)\.wallet_provider_code:(?P<wallet_provider_code>.*)\.fa_type:(?P<fa_type>.*)$
    G2P_BRIDGE_CELERY_BEAT_EMAIL_WALLET_DECONSTRUCT_STRATEGY: ^email_address:(?P<email_address>.*)\.wallet_provider_name:(?P<wallet_provider_name>.*)\.wallet_provider_code:(?P<wallet_provider_code>.*)\.fa_type:(?P<fa_type>.*)$
    G2P_BRIDGE_CELERY_BEAT_MAPPER_RESOLVE_FREQUENCY: 10
    G2P_BRIDGE_CELERY_BEAT_FUNDS_AVAILABLE_CHECK_FREQUENCY: 10
    G2P_BRIDGE_CELERY_BEAT_FUNDS_BLOCKED_FREQUENCY: 10
    G2P_BRIDGE_CELERY_BEAT_FUNDS_DISBURSEMENT_FREQUENCY: 10
    G2P_BRIDGE_CELERY_BEAT_MT940_PROCESSOR_FREQUENCY: 10
    G2P_BRIDGE_CELERY_BEAT_PROCESS_FUTURE_DISBURSEMENT_SCHEDULES: false

  envVarsFrom:
    G2P_BRIDGE_CELERY_BEAT_DB_PASSWORD:
      secretKeyRef:
        name: '{{ .Release.Name }}-postgresql'
        key: password

openg2p-g2p-bridge-celery-workers:
  enabled: true
  image:
    repository: openg2p/openg2p-g2p-bridge-celery-workers
    tag: '1.0.2'
  common:
    enabled: false
  postgresql:
    enabled: false
  redis:
    enabled: false
  envVars:
    G2P_BRIDGE_CELERY_WORKERS_MAPPER_RESOLVE_API_URL: 'http://spar-spar-mapper-api/sync/resolve'
    G2P_BRIDGE_CELERY_WORKERS_DB_DBNAME: openg2p_g2p_bridge_db
    G2P_BRIDGE_CELERY_WORKERS_DB_USERNAME: bridgeuser
    G2P_BRIDGE_CELERY_WORKERS_DB_HOSTNAME: '{{ .Release.Name }}-postgresql'
    G2P_BRIDGE_CELERY_WORKERS_BANK_FA_DECONSTRUCT_STRATEGY: ^account_number:(?P<account_number>.*)\.branch_code:(?P<branch_code>.*)\.bank_code:(?P<bank_code>.*)\.mobile_number:(?P<mobile_number>.*)\.email_address:(?P<email_address>.*)\.fa_type:(?P<fa_type>.*)$
    G2P_BRIDGE_CELERY_WORKERS_MOBILE_WALLET_DECONSTRUCT_STRATEGY: ^mobile_number:(?P<mobile_number>.*)\.wallet_provider_name:(?P<wallet_provider_name>.*)\.wallet_provider_code:(?P<wallet_provider_code>.*)\.fa_type:(?P<fa_type>.*)$
    G2P_BRIDGE_CELERY_WORKERS_EMAIL_WALLET_DECONSTRUCT_STRATEGY: ^email_address:(?P<email_address>.*)\.wallet_provider_name:(?P<wallet_provider_name>.*)\.wallet_provider_code:(?P<wallet_provider_code>.*)\.fa_type:(?P<fa_type>.*)$
    G2P_BRIDGE_CELERY_PRODUCERS_FUNDS_AVAILABLE_CHECK_URL_EXAMPLE_BANK: 'http://openg2p-g2p-bridge-example-bank-api/check_funds'
    G2P_BRIDGE_CELERY_PRODUCERS_FUNDS_BLOCK_URL_EXAMPLE_BANK: 'http://openg2p-g2p-bridge-example-bank-api/block_funds'
    G2P_BRIDGE_CELERY_PRODUCERS_FUNDS_DISBURSEMENT_URL_EXAMPLE_BANK: 'http://openg2p-g2p-bridge-example-bank-api/initiate_payment'
    G2P_BRIDGE_CELERY_WORKERS_CELERY_BROKER_URL: redis://{{ .Release.Name }}-redis-master:6379/0
    G2P_BRIDGE_CELERY_WORKERS_CELERY_BACKEND_URL: redis://{{ .Release.Name }}-redis-master:6379/0

  envVarsFrom:
    G2P_BRIDGE_CELERY_WORKERS_DB_PASSWORD:
      secretKeyRef:
        name: '{{ .Release.Name }}-postgresql'
        key: password

postgresql:
  enabled: true
  resourcesPreset: "small"
  resources:
    limits:
      cpu: 1000m
      memory: 500Mi
    requests:
      cpu: 200m
      memory: 200Mi
  auth:
    username: bridgeuser
    database: openg2p_g2p_bridge_db
  primary:
    extendedConfiguration: |-
      wal_level = logical
      max_wal_senders = 20
      max_replication_slots = 10

redis:
  enabled: true
  architecture: standalone
  master:
    persistence:
      enabled: false
  auth:
    enabled: false
